~/repos/vtouch-vanki/doc/vimtouch-scrsh_vimankidraft.png
~/repos/vtouch-vanki/doc/rsc/keyboard-termux.jpg
TODO Move to rsc:
  ~/repos/vtouch-vanki/doc/VT_VANKI-DOC.MASTER.xcf

- SYNTAX/SPELL ON/OFF
- Tagging - (v)E: = aux Enter
  - Autoset translation-language

jumplist|navigation:
    === termux vimrc ===
     z0/z9  __z0
    === vta.multilines.vim ===
     z1  __z1
    === vta.review.vim ===
     z2  __z2
    === vta.car.vim ===
     z3  __z3
    === vtd.reftxt2vankinotes.vim ===
     z4  __z4
    === vt.shorthtranscrib.vim ===
     z5  __z5
    === vtd.tagging.vim ===
     z6  __z6
    === vtd.svsyndb-tag.vim ===
     z7  __z7
    === vtd.dualist.vim ===
     z8  __z8

New VTA-script Ideas[!!]:
 - Indent Checklists
 - Sty-tr + Boll ***(!)

general bindings (=set in init):
 ZF   edit init
 ZFF  edit vtouchrc
 ZT   line to top (of screen)
 ZE   :bd

-------------------------
### ~/Dropbox/bin/scripts/va/
-------------------------


    z0
~/path/to/imagefile.png
save/update           ,,
break out (norm!)     ,Z
Prepare setting
  file-level mark     M
    === vta.review.vim ===
    # basic/shared convenience-mappings
Tab gt/gT:
  GTT / GT
go to First Tab:
  ,1
Re-Source Vimrc:
  ,0 /      ,1 / ,5 / ,3  = :source ~/.vimrc
Go to/Trigger Next Misspell:
  ,SS = ]szz
  ,S  = z=
ConvenienceSETTRANSLSHELLTARGETLANG:
  ,LA  @@@
ConvenienceFOLDTOGGLE:(za)  ****
   X      ×÷■¤
Navigation 'Goto Next/Prev':
  Changes     up/down
  JUMPS       s-up/s-down
    (c-o/c-i)
  Mark        a-up/a-down
  FOLDLEVEL   right/left
----
GotoNextSplitPLUSMaximizeTargetSplit:
  ,WW
    @@ c-w c-w WITH MAX-FLIP
EqualizeSizeOfSplits:
  ,W
----
OPEN NEW TAB:(+split etc)
  c-w gf        GF
  split         GS
  tabedit       GE
Simple Visual Line Highlighter:
  (v) c-Up/c-Down


## text up | down    (=c-e | c-y)
    # ='reveal text down | up' // 'view down | up'
Factor Out: gg, tt, n|v:zz|ZZ   Qq[??](= ':norm! ')
Newer Idiom: Clear Whole Rev-Maps %
 =multilines, review, car %


    z1  __z1
~/repos/vtouch-vanki/doc/vanki_Multiline-BetterUndo--AddFuncts.png
    ## aux 'n' + 'zt - 1'
    === vta.multilines.vim ===
    # =basic shuffle-review(**)
save                3|4
del. post           6|7
 vmark line         vv
reset pract.block   00
ripple-reset block  09
    # =reset + go to next
--
show | hide q.      TYU.GHJ
q. up | down        WE.SD | OP.LÖ
text up | down      ZXC | BNM
    #(!!: Factor Out(!))
--
 tag '@'              q1
 tag '@@'             q2
 tag '@@(@)'          q3
highl. @-tagged      qs *
reset hl.            0


    z2  __z2
~/repos/vtouch-vanki/doc/vanki_review-QReview.png
    === vta.review.vim ===
save                  3
 up one q.            4
## reset pract.block    00
## ripple-reset block   09
----
 speedreview(*)      QW.AS
show | hide q.      RT.FG
next post + c-e     UI.JK
 text up | down      XC | BN
flip ltr/rtl         RL
--
 tag '(@)'            QA
 tag '@'              QQ
 tag '@(@)'           Q1
 tag '@@'             Q2
 tag '@@(@)'          Q3
 tag '@@ @'           Q4
highl. @-tagged      qs *
reset hl.            0


    z3  __z3
~/repos/vtouch-vanki/doc/vanki_car-ChangeUndo.png
    === vta.car.vim ===
save                5 @
 to prev. q. *(!)    4 @@(@)
del. q+a            7
 reset pract.block   00
 ripple-reset block  09
vmark line          6
----
show | hide q.      H
q. up | down        U | K
 undo                C
--
 tag '@'              OO
 tag '@@'             O8
 tag '@@(@)'          OP
highl. @-tagged      qs *
    # (=Set to Other(????))
reset hl.            0

       (=== vta.review-car.vim (???? (=new(!!))) )


    z4  __z4
~/repos/vtouch-vanki/doc/Reftxt2Vankinotes.xcf
~/repos/vtouch-vanki/doc/Reftxt2Vankinotes.png
    === vtd.reftxt2vankinotes.vim ===# add 'Zz' = Esc
# Refact|Del(??): ZX (=next paragr.(??))  %
# TODO REFACT: Binary Modes Switch
## TextMode | LonglinesMode !!(**)##
    ## nohlsearch, foldmethod=marker
    # base editing(!!): space(=mark), (ED),  QA, T(**),  E = aux Esc
save                3
split l. | join **  5 | 55
vmark line          vv
    # (v + v_V)
 '/' next a@-tag **  q5  [!!!!]
open DECK.MASTER *  qed
 find extdok-string (eg. fr. pdf|web) in txt ref-file    qs
    # searches '+'-string in txt-ref
 --
format paragr.(!)   O   # n|v-mode
'remove stairstep'  OO  ## * n|v-mode
(v)del. next blank
  line + gq **      6
----
vmarked to cloze *  qw
--  z4[=Core Funct.]
  flip tab (+save |
        | cut(v))   QA
  open next f.       U
  close f. + Ent     VB
new VankiFold *     7  (%)
  \(cursor on q-line w. num(!))
    #Refac(??|!): add zm first[!!]
new VankiBlock *    8
    #=delimit + new block
bump refdok pgnr    qd
vmark megablocks    mm(line 1) + vmark bot. + 1
 (v)Ent                 T
    #(=reset|Refact(!!))
vmark n.|prev. sent.    W | S *****
    #+zt
 paste l.s + indent     G
    #=Refac(!! =dont have to 'GYI'++++ for blocks(!!))
 > / < line ***        II | YY
 > last pasted l.s *   YI
 --
fr. open a-fold  =star prev. q-line: (**(*))
    @           q1
    @@          q2
    @@(@)       q3
star-tag lines: *
    *           å0
    **          åå
    **(*)       å9
    (??)        å8
    (!)         å6
    (!!)        å7
 --
## consist. format for inner a-block(!!)          qf
    #[=MAY BE REDONE W. ADVANC. REFACT. 2021+(!!)]
----
insert ' 'blank l.      ZZ
ins. pure(!) blank l.   zz
    #=New(!! =Refactor)
vmark 'back'    B (**)
down | up       J | K
 undo           M
del. line       DD
[del. | edit vmarked   X | C]
 aux. 'n'       ÅÄ


    z5  __z5
~/repos/vtouch-vanki/doc/vanki_shorthtranscrib_ADD-ÄX.png
    === vt.shorthtranscrib.vim ===
# ic, hlsearch, incsearch
to top ref 1|2      1, 2
--
save                4
:nohlsearch         0
Vmark Next W.       space
----
yiw + search k.      W
(v)search k.        V   #+=fragm.(!)
(v)exact search k.  X **
yank curs. k-line   Y (!)
/: find k-string    K *
 [word-end mark      M ]
 [w-end key-box      A ]   # '[]'
 [w.e. custom key    Ä ]   # '[[]]'
jump back           O
 [(v) pull k-string (=directly)  D ]
--
Load refblock       R
    # /storage/emulated/0/Download/refsteno-


    z6  __z6
~/repos/vtouch-vanki/doc/Tagging.xcf
~/repos/vtouch-vanki/doc/Tagging.png
    === vtd.tagging.vim ===
save                1
v-esc(+'l')         3
aux-Enter           E
Undo | Redo (!)     Ä | Å
--
 (n)gv               OO     ¤
 O = gv                     ¤
 ## OO = gx/termux-open
 ## OR USE 'termux-open image.png'
 (n)nohl             0
 --
 vmark w. | next w. (!)     space
 esc + back (b)      B
 (v) line to top     ZZ
--
Format Paragr.      GG
  (v)'no stairsteps'  GG **  # +:up
  (v)format paragr.   G      # +:up
(v)del. next blank line(!)   6
(v)add line after         A
(v)del. space after v.    D
Toggle Linebreak-mode     LL
   (yank vmarked to '+'   9)
  --
Omni-dashify(v0.5)        @R  ******
  dashify prev./next      ,B / ,E
(v)commafy at end          a
# Flipjump (+push/fetch)
#  / 'Dismembers'
#  / SplitFuse
" VisualLine: vnoremap V
" # [ ] vhighlight: empty unhighlighted line at top (as padding)
" GK / GJ  //  KK / KJ  Demote / Promote (sentence split by refpdf dok-link)
----
vmark sent. *             5|6
(v) next sent.(!)     YUI.HJK
(v)vm to prev. sent.      5
 (v)Tag=N          N
 (v)Tag=T          T
 (v)Tag=Q/A *      Q ; A
--
(n)to prev|next tagged *    q1 | q2
[basic n-tags
    N, T, Q, A, (n, t,)
--
 Join curr. line w. next    ,J
 Split curr. line at
    max-36-space            ,R

----
 (n)to next|prev. paragr.   cv | qq  ¤
    #+zt                             ¤
(n)list bmk-rsc-files      qf  ¤


    z7  __z7
    === vtd.svsyndb-tag.vim ===
save                3|4
split long line     6|7  # next ' ' = '@@\n@@'
 vmark line         9
(n)clear hls        0
----
ent + scroll 1 l.   space
vmark next w. (**)  QW.AS
tag Fun         F
tag Usef        U
tag New         N
    # (=learning)
tag Etym|Expln. E
tag Hm          H
    # (=includ. 'Mistake')
tag Post        P
    # (=whole post|concept (eg. 'absolut'))
    .
    .
-------------------------------------
Ny Temp(**(!!)): mute-reftagging(=2021++)
    (=tag txt mutereflist w. simple _1, _2 etc-tags (=for simple break apart-filtering 2021 ++(!!)))
-------------------------------------


    z8  __z8
    === vtd.dualist.vim ===
    # nohlsearch, foldmethod=marker
# New!  transpose word(!!)   #=for rearr.ing '_tag'-order  (=for searching multitags)
--
save                   3
 top of paragr. + zt    1
to prev.|next list    5 | 6
item(s) to prev.||next list  55 | 66
  .
  #[!!] N | n          7|8
----
V | Vesc **         space
--
curs.line up | dn.  QA  |  UJ
vl.mark up | dn.     ED | TG
 vmode o             0
view up | down      ZX | VB
 .
   .
 #[!!] vmarked up|dn.  OL | ÅÄ
   .
(!!) line-hlsearch _tagged ((****))  qq|q1 (?????(!!!!!))


